{"pages":[{"title":"about","text":"挖个坑，不一定会填。","link":"/about/index.html"}],"posts":[{"title":"J2EE-大作业-物流管理系统","text":"Github地址： https://github.com/duerwuyi/Logistics-Management-System-demo 设计一个物流管理功能（平台），通过该平台用户可以提交与查询托运订单申请，货物交给物流公司托运；物流公司的管理员可以对员工、车辆、托运订单进行动态管理（增删改查），可以为订单分配承运车辆与司机，并更新订单的状态，确认货物送达；收货客户收到货物后，确认收货。 ##角色与基本功能： 用户：注册、登录、个人信息管理、我的收货订单、我的发货订单、提交托运订单（提交订单时需要填写发件人和收件人地址与联系方式；货物的名称、重量、体积、价值等信息）、查看订单状态信息 管理员：登录，员工管理，车辆管理，托运订单管理；管理包括基本信息的增、删、改、查。（选做：为待发运的订单分配司机与车辆，货物送达时更新订单状态） 根据实际中物流管理平台，也可以增加其他功能，如流程管理、地图等。 自定义并写清楚具体需求分析和功能模块，以及包含哪些数据表。 项目提交要求：实验报告以小组（2~3人）为单位提交、项目需求和实践报告和系统程序源代码（包括程序的说明readme），以小组为单位于12月19日24点之前提交到大夏学堂。 点击这里下载源文档。 总之，虽然本门J2EE课程只有2学分，但小组成员为此投入的时间绝对不亚于任何5学分以上的课程。","link":"/2022/02/06/J2EE-Homework/"},{"title":"Hexo+icraus博客搭建过程","text":"本文将记录该博客创建过程。使用hexo博客框架，icarus主题。 本项目github仓库地址： https://github.com/duerwuyi/duerwuyi.github.io Hexo官网：https://hexo.io/zh-cn/ icraus官方文档及预览：https://ppoffice.github.io/hexo-theme-icarus icarus的github仓库地址：https://github.com/ppoffice 一、写在前面写这篇文章时,整体网站搭建如下： 此时，项目已部署到Github pages。 框架：使用hexo博客框架，icarus主题。该主题的完成度非常高，三栏的布局模式使主页面有着爆炸的信息量，简约的设计风格又不让人感觉冗余。 然而此时博客内的文章只字未写，且对于博客系统的改造还未开动。因此写下此篇博文，边撰写边对该项目进行魔改。 第二部分将简略记录框架搭建+服务器部署+基本配置方面的内容，第三部分将同步解决后续的各类问题。 二、前置准备略，有空填坑。（防止忘记：这一部分主要是关于Hexo的npm安装和命令，Git配置，部署到github pages，以及config.yml的修改） 先贴出hexo的readme： Create a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment 三、静态界面修改静态图像在 icraus/source/img下修改图片，里面有着静态图片资源如logo（网站左上角），头像等。 在_config.icarus.yml中可以修改路径： _config.icarus.yml1logo: /img/logo.svg 修改图标也是一样，使用下方的路径，将图标变为流汗黄豆。 _config.icarus.yml1favicon: /img/favicon.ico widgets个人信息栏在_config.icarus.yml中的widgets处。下方的代码为原始配置。（已自动折叠） _config.icarus.yml >folded1234567891011121314151617181920212223242526272829303132333435363738widgets:# Profile widget configurations- # Where should the widget be placed, left sidebar or right sidebar position: left type: profile # Author name author: PPOffice # Author title author_title: Web Developer # Author's current location location: Earth, Solar System # URL or path to the avatar image avatar: # Whether show the rounded avatar image avatar_rounded: false # Email address for the Gravatar gravatar: # URL or path for the follow button follow_link: 'https://github.com/ppoffice' # Links to be shown on the bottom of the profile widget social_links: Github: icon: fab fa-github url: 'https://github.com/ppoffice' Facebook: icon: fab fa-facebook url: 'https://facebook.com' Twitter: icon: fab fa-twitter url: 'https://twitter.com' Dribbble: icon: fab fa-dribbble url: 'https://dribbble.com' RSS: icon: fas fa-rss url: / 此外，这种自动折叠的代码的markdown语法如下: markdown123$ ``` [language] [title] &gt;folded $ [your code]$ ``` 复制后把$ 去除。 在widget的profile配置中，下方链接栏仅保留了github。 除此以外，widgets还用-作为分割，分别配置了左右处的所有卡片，其中type一项代表了这个卡片的类型。 然而，在widgets中有一项toc，也就是目录卡片却并未渲染，因为文章头部未添加toc: true。 想要每篇文章自动添加此头部，可在 scaffolds/post.md 中添加一行toc: true。 最后再更改一下布局，把个人信息相关全都放在左栏，目录放在右栏。 项目的Github链接ctrl+f在yml文件中搜索“navbar:”，然后直接修改即可。 about页面命令行执行 terminal1hexo new page &quot;about&quot; 就会新建一个about页面，通过头部导航栏访问，页面内容保存在source/about/index.md中。 创建新页面也是一样的方法。此时在yml文件中的menu处添加跳转即可。 _config.icarus.yml >folded12345678navbar:# Naviagtion menu itemsmenu:Home: /Archives: /archivesCategories: /categoriesTags: /tagsAbout: /about 主页的文章概览使用more来截断文章，截断前的部分为主页概要。 html1&lt;!-- more --&gt; 在文章头部添加cover: 和thumbnail: 可以添加概要部分的展示图片。（手机端似乎不显示）已解决：要用绝对网址。 gittalk评论功能。gittalk评论功能使用了来自第三方的评论区。使用github账户开通该应用，就可以利用仓库的issue功能来实现评论区内容的存储。 详情请看：icrus官方文档-gittalk插件 注意Outh应用的主页和回调网址要写全！ 开通完毕后在底部的评论区用author账号完成初始化后该文章将开通评论。 _config.icarus.yml12345678910111213141516comment: type: gitalk client_id: xxxxxxxxxxxxxxxxxxxx # 私有的 client_secret: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx # 私有的 repo: Some-of-Your-GitHub-Repo # 你的仓库名字 owner: your_github_name # 你的github用户名 admin: - your_github_name # 你的github用户名 per_page: 20 # 可选填 distraction_free_mode: false # 可选填 pager_direction: last # 可选填 create_issue_manually: false # 可选填 proxy: # 可选填 flip_move_options: # 可选填 enable_hotkey: true # 可选填 language: zh-CN # 可选填 卜蒜子 记录访问量将plugins &gt; busuanzi设置为true来开启不蒜子访客计数器并在网页尾部和每篇博文的头部展示访问次数。","link":"/2022/01/27/blog-building-process/"},{"title":"idea配置python环境、运行github上django项目保姆级教程","text":"假期在家接了一个项目，后端是用Django框架完成的，到学校换了电脑，需重新配置环境。由于不想装pycharm，因此基本一个idea解决所有问题。 ##下载和安装 idea请自备。python我选择直接下载anaconda3，使用里面的python。理论上不建议同时安装python3本体和anaconda，会引发命令行python指向不明确的问题。安装时要勾选添加环境变量，漏了建议重新安装。 随后升级pip。anaconda自带的pip版本比较低。如果遇到https错误请换阿里源或挂梯。 cmd1python -m pip install --upgrade pip 安装Django。 cmd1pip install Django 使用豆瓣源请使用： cmd1pip install Django -i http://pypi.douban.com/simple --trusted-host pypi.douban.com ##配置 idea搜索插件python并安装。","link":"/2022/02/21/idea-python-django-bulid/"}],"tags":[{"name":"Vue","slug":"Vue","link":"/tags/Vue/"},{"name":"Springboot","slug":"Springboot","link":"/tags/Springboot/"},{"name":"mySQL","slug":"mySQL","link":"/tags/mySQL/"},{"name":"Web","slug":"Web","link":"/tags/Web/"},{"name":"blog","slug":"blog","link":"/tags/blog/"},{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"icarus","slug":"icarus","link":"/tags/icarus/"},{"name":"intellij idea","slug":"intellij-idea","link":"/tags/intellij-idea/"},{"name":"python","slug":"python","link":"/tags/python/"},{"name":"Django","slug":"Django","link":"/tags/Django/"}],"categories":[{"name":"Web","slug":"Web","link":"/categories/Web/"},{"name":"python","slug":"python","link":"/categories/python/"},{"name":"JavaWeb","slug":"Web/JavaWeb","link":"/categories/Web/JavaWeb/"},{"name":"blog","slug":"Web/blog","link":"/categories/Web/blog/"},{"name":"Django","slug":"python/Django","link":"/categories/python/Django/"}]}